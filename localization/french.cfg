{
	"reservedArray": ["si", "alors", "sinon", "fin", "répéter", "tant que", "lire", "écrire"],
	
	"parseError": "Erreur d'analyse: état= %d\n",
	
	"lexerSyntaxError": "Erreur de syntaxe à la ligne %d, symbole inattendu -> ",
	"lexerReservedWordError": "mot réservé: %s\n",
	"lexerAssignError": ":=\n",
	"lexerLTError": "<\n",
	"lexerEQError": "=\n",
	"lexerLPARENError": "(\n",
	"lexerRPARENError": ")\n",
	"lexerSEMIError": ";\n",
	"lexerPLUSError": "+\n",
	"lexerMINUSError": "-\n",
	"lexerTIMESError": "*\n",
	"lexerOVERError": "/\n",
	"lexerENDFILEError": "EOF\n",
	"lexerNUMError": "NUM, nom= %s\n",
	"lexerIDError": "ID, nom= %s\n",
	"lexerERRORError": "ERREUR: %s\n",
	"lexerDEFAULTError": "Symbole inconnu: %d\n",
	"lexerABORTINGError": "Abandon",
	
	"analyzeTypePrefixError": "Caractère incorrect à la ligne: %d: %s\n",
	"analyzeTypeOpError": "Opération appliquée à une valeur non-entière",
	"analyzeTypeIfError": "si le test est pas une valeur booléenne",
	"analyzeTypeAssignError": "assignation d'une valeur non-entière",
	"analyzeTypeWriteError": "écriture d'une valeur non-entière ou d'une valeur qui n'est pas une chaîne de caractères",
	"analyzeTypeRepeatError": "le test ne retourne pas une valeur booléenne",
	
	"codegenUnknownOperatorError": "Opérateur inconnu pour la génération de code",
	"codegenUnknownTypeError": "Type inconnu pour la génération de code",
	
	"vmMissingColonError": "Deux-points manquant à la ligne: %d\n",
	"vmMemoryLocationError": "Emplacement de la mémoire invalide %s , à la ligne: %d\n",
	"vmMemoryToLargeError": "Emplacement de mémoire trop grand %d à la ligne: %d\n",
	"vmMissingOpcodeError": "Opcode manquant à l'emplacement %d, à la ligne: %d\n",
	"vmInvalidOpcodeError": "Opcode invalide à l'emplacement %d, à la ligne: %d\n",
	"vmInvalidNumberOfArgumentsError": "Nombre d'arguments invalide à l'emplacement %d, à la ligne: %d\n",
	"vmInvalidFirstArgumentError": "Premier argument invalide à l'emplacement %d, à la ligne: %d\n",
	"vmInvalidSecondArgumentError": "Deuxième argument invalide à l'emplacement %d, à la ligne: %d\n",
	"vmInvalidThirdArgumentError": "Troisième argument invalide à l'emplacement %d, à la ligne: %d\n",
	"vmInvalidProgramCounterError": "Valeur incorrecte du compteur: %d\n",
	"vmInvalidMemoryAddressError": "Valeur d'adresse de mémoire non valide: %d\n",
	"vmNonIntegerEnteredError": "Valeur entrée non entière.",
	"vmDivisionWIthZeroError": "Division avec zéro."
}
